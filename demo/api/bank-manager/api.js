const axios = require('../axios');
const config = require('./config');

module.exports = {
    postBankproxyRespCodeBankproxyApiAddRespCodeV1: param => axios(Object.assign(config.postBankproxyRespCodeBankproxyApiAddRespCodeV1, param)),
    postBankproxyRespCodeBankproxyApiAddRespCodeMappingV1: param => axios(Object.assign(config.postBankproxyRespCodeBankproxyApiAddRespCodeMappingV1, param)),
    postBankproxyRespCodeBankproxyApiUpdateRespCodeV1: param => axios(Object.assign(config.postBankproxyRespCodeBankproxyApiUpdateRespCodeV1, param)),
    postBankproxyRespCodeBankproxyApiUpdateRespCodeMappingV1: param => axios(Object.assign(config.postBankproxyRespCodeBankproxyApiUpdateRespCodeMappingV1, param)),
    postBankproxyToolsBankproxyApiDecryptV1: param => axios(Object.assign(config.postBankproxyToolsBankproxyApiDecryptV1, param)),
    postBankproxyToolsBankproxyApiResendTmcMsgV1: param => axios(Object.assign(config.postBankproxyToolsBankproxyApiResendTmcMsgV1, param)),
    postBankproxyToolsSyncOrderStatusV1: param => axios(Object.assign(config.postBankproxyToolsSyncOrderStatusV1, param)),
    getBjbankAccountAaV1: param => axios(Object.assign(config.getBjbankAccountAaV1, param)),
    postBjbankAccountAccountInfoFromDepositoryV1: param => axios(Object.assign(config.postBjbankAccountAccountInfoFromDepositoryV1, param)),
    getBjbankAccountCheckBindCardV1: param => axios(Object.assign(config.getBjbankAccountCheckBindCardV1, param)),
    getBjbankAccountCheckInvestDataV1: param => axios(Object.assign(config.getBjbankAccountCheckInvestDataV1, param)),
    getBjbankAccountCheckProdAccountV1: param => axios(Object.assign(config.getBjbankAccountCheckProdAccountV1, param)),
    getBjbankAccountCheckRepayDataV1: param => axios(Object.assign(config.getBjbankAccountCheckRepayDataV1, param)),
    postBjbankAccountModifyAccountInfoV1: param => axios(Object.assign(config.postBjbankAccountModifyAccountInfoV1, param)),
    getBjbankOrderQueryOrderByOrderNoOrgTxCodehtmOrderOrgOrderNoV1: param => axios(Object.assign(config.getBjbankOrderQueryOrderByOrderNoOrgTxCodehtmOrderOrgOrderNoV1, param)),
    getBjbankOrderOrgTxCodehtmOrderOrgOutOrderNoV1: param => axios(Object.assign(config.getBjbankOrderOrgTxCodehtmOrderOrgOutOrderNoV1, param)),
    getBjbankWithdrawFindByOutOrderNoV1: param => axios(Object.assign(config.getBjbankWithdrawFindByOutOrderNoV1, param)),
    postBjbankFileToUnitedSftpV1: param => axios(Object.assign(config.postBjbankFileToUnitedSftpV1, param)),
    postCheckV1: param => axios(Object.assign(config.postCheckV1, param)),
    getCheckErrorV1: param => axios(Object.assign(config.getCheckErrorV1, param)),
    getCheckSummaryV1: param => axios(Object.assign(config.getCheckSummaryV1, param)),
    postCompenAcceptFailTxCodeV1: param => axios(Object.assign(config.postCompenAcceptFailTxCodeV1, param)),
    getCompenFailResultRecordListV1: param => axios(Object.assign(config.getCompenFailResultRecordListV1, param)),
    postCompenFailToRetryTxCodeV1: param => axios(Object.assign(config.postCompenFailToRetryTxCodeV1, param)),
    getCompenUnKnowResultRecordListV1: param => axios(Object.assign(config.getCompenUnKnowResultRecordListV1, param)),
    postCompenTxCodehtmOrdersV1: param => axios(Object.assign(config.postCompenTxCodehtmOrdersV1, param)),
    postCompenTxCodehtmReSendResultToTmcV1: param => axios(Object.assign(config.postCompenTxCodehtmReSendResultToTmcV1, param)),
    postCompenTxCodehtmRepushToAsynMqV1: param => axios(Object.assign(config.postCompenTxCodehtmRepushToAsynMqV1, param)),
    getEnumListBankProxyTxCodesV1: param => axios(Object.assign(config.getEnumListBankProxyTxCodesV1, param)),
    getEnumListFirstSubjectTypeEnumV1: param => axios(Object.assign(config.getEnumListFirstSubjectTypeEnumV1, param)),
    getEnumListOrderFileTypeV1: param => axios(Object.assign(config.getEnumListOrderFileTypeV1, param)),
    getEnumListSecondSubjectTypeEnumV1: param => axios(Object.assign(config.getEnumListSecondSubjectTypeEnumV1, param)),
    getEnumListTxCodeEnumQueryAvailableV1: param => axios(Object.assign(config.getEnumListTxCodeEnumQueryAvailableV1, param)),
    getExportFileNamesV1: param => axios(Object.assign(config.getExportFileNamesV1, param)),
    postExportToSftpV1: param => axios(Object.assign(config.postExportToSftpV1, param)),
    getExportOrderFileV1: param => axios(Object.assign(config.getExportOrderFileV1, param)),
    getFileDownloadDirListV1: param => axios(Object.assign(config.getFileDownloadDirListV1, param)),
    getFileDownloadFromBankSftpV1: param => axios(Object.assign(config.getFileDownloadFromBankSftpV1, param)),
    getOptAccountBalancePlatcustV1: param => axios(Object.assign(config.getOptAccountBalancePlatcustV1, param)),
    postOptAccountBalanceDetailV1: param => axios(Object.assign(config.postOptAccountBalanceDetailV1, param)),
    postOptAccountInfoV1: param => axios(Object.assign(config.postOptAccountInfoV1, param)),
    postOptAesDecryptV1: param => axios(Object.assign(config.postOptAesDecryptV1, param)),
    postOptAesEncryptV1: param => axios(Object.assign(config.postOptAesEncryptV1, param)),
    postOptFundChangeV1: param => axios(Object.assign(config.postOptFundChangeV1, param)),
    getOptOrderStatusOrgOrderNoV1: param => axios(Object.assign(config.getOptOrderStatusOrgOrderNoV1, param)),
    postOptProductBalanceV1: param => axios(Object.assign(config.postOptProductBalanceV1, param)),
    getOptProductInfoProdIdV1: param => axios(Object.assign(config.getOptProductInfoProdIdV1, param)),
    postOptProductInvestmentByPlatCustDetailV1: param => axios(Object.assign(config.postOptProductInvestmentByPlatCustDetailV1, param)),
    postOptProductInvestmentDetailV1: param => axios(Object.assign(config.postOptProductInvestmentDetailV1, param)),
    getOptQueryPlatformAccountBalanceDetailV1: param => axios(Object.assign(config.getOptQueryPlatformAccountBalanceDetailV1, param)),
    getOptQueryPlatformBankCardBalanceDetailCompanyAccountTypeEnumV1: param => axios(Object.assign(config.getOptQueryPlatformBankCardBalanceDetailCompanyAccountTypeEnumV1, param)),
    getOptRechargeStatusOrgOrderNoV1: param => axios(Object.assign(config.getOptRechargeStatusOrgOrderNoV1, param)),
    getOptReloadRespCodeV1: param => axios(Object.assign(config.getOptReloadRespCodeV1, param)),
    postOptRepayDetailV1: param => axios(Object.assign(config.postOptRepayDetailV1, param)),
    getOptServiceTokenV1: param => axios(Object.assign(config.getOptServiceTokenV1, param)),
    getOptOrgTxCodehtmPositionOrgOutOrderNoV1: param => axios(Object.assign(config.getOptOrgTxCodehtmPositionOrgOutOrderNoV1, param)),
    getPayTradePaymentQueryOrderNoV1: param => axios(Object.assign(config.getPayTradePaymentQueryOrderNoV1, param)),
    getPayTradeQueryCollectOrderOrderNoV1: param => axios(Object.assign(config.getPayTradeQueryCollectOrderOrderNoV1, param)),
    postPlatformPlatformRechargeV1: param => axios(Object.assign(config.postPlatformPlatformRechargeV1, param)),
    postPlatformPlatformWithdrawV1: param => axios(Object.assign(config.postPlatformPlatformWithdrawV1, param)),
    postPlatformTransferToPlatformV1: param => axios(Object.assign(config.postPlatformTransferToPlatformV1, param)),
};
